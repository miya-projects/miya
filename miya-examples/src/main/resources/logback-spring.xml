<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="1 seconds" >
    <!--scan:-->
    <!--当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。（这个功能可以在不重启运行环境下，调整打印日志的细节，方便定位问题）-->
    <!--scanPeriod:-->
    <!--设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
    <!--级别排序为： TRACE < DEBUG < INFO < WARN < ERROR-->

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 包名全部显示，带颜色代码，调试时点击可跳转代码 输出到控制台使用 -->
    <property name="CONSOLE_LOG_PATTERN"
    value="%date{yyyy-MM-dd HH:mm:ss.SSS} %clr(%5p) [%t] %cyan(%replace(%caller{1}){'\t|Caller.{1}0|\r\n', ''}) - %m%n">
    </property>

    <!-- 包名全部显示，带颜色代码，调试时点击可跳转代码 输出到文件使用 -->
    <property name="FILE_LOG_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss.SSS} %5p [%t] %replace(%caller{1}){'\t|Caller.{1}0|\r\n', ''} - %m%n">
    </property>

    <!-- 包名只显示首字母，带颜色代码，调试时不可点击跳转代码 输出到控制台使用 -->
    <property name="CONSOLE_LOG_SIMPLE_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss.SSS} %5p [%t] %replace(%caller{1}){'\t|Caller.{1}0|\r\n', ''} - %m%n">
    </property>

<!--    <logger name="org.springframework.web" level="trace"/>-->
<!--    <logger name="org.springframework.boot.web.servlet.filter" level="WARN"/>-->
<!--    <logger name="org.eclipse" level="WARN"/>-->
    <logger name="org.apache" level="warn"/>
<!--    <logger name="org.mybatis" level="INFO"/>-->
<!--    输出hibernate sql参数-->
<!--    <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />-->
    <logger name="org.hibernate.SQL"  level="DEBUG" />
<!--    swagger-->
    <logger name="springfox.documentation.spring.web" level="warn" />
    <logger name="com.miya.common.config.web.RepeatableRequestMappingHandlerMapping" level="info" />
    <logger name="com.miya" level="DEBUG" />

    <!-- Console 输出设置 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="file_console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <springProfile name="!prod">
<!--        <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--                <FileNamePattern>D:/logs/%d{yyyy-MM, aux}/error-%d{yyyy-MM-dd}.log</FileNamePattern>-->
<!--                &lt;!&ndash; 保留10天日志 &ndash;&gt;-->
<!--                <maxHistory>10</maxHistory>-->
<!--                &lt;!&ndash;日志文件大小上限&ndash;&gt;-->
<!--                <totalSizeCap>1GB</totalSizeCap>-->
<!--            </rollingPolicy>-->
<!--            <encoder>-->
<!--                <pattern>${FILE_LOG_PATTERN}</pattern>-->
<!--            </encoder>-->
<!--            &lt;!&ndash;        临界值过滤器，过滤掉低于指定临界值的日志&ndash;&gt;-->
<!--            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--                <level>error</level>-->
<!--            </filter>-->
<!--            <filter class="ch.qos.logback.classic.filter.LevelFilter">&ndash;&gt;-->
<!--                <level>error</level>-->
<!--                <onMatch>ACCEPT</onMatch>-->
<!--                <onMismatch>DENY</onMismatch>-->
<!--            </filter>-->
<!--        </appender>-->

        <root level="info">
            <appender-ref ref="console"/>
<!--            <appender-ref ref="file"/>-->
        </root>
    </springProfile>


    <springProfile name="prod">
        <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>logs/%d{yyyy-MM, aux}/%d{yyyy-MM-dd}.log</FileNamePattern>
                <!-- 保留10天日志 -->
                <maxHistory>10</maxHistory>
                <!--日志文件大小上限-->
                <totalSizeCap>1GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
            </encoder>
            <!--        临界值过滤器，过滤掉低于指定临界值的日志-->
            <!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
            <!--            <level>INFO</level>-->
            <!--        </filter>-->
            <!--        级别过滤器，根据日志级别进行过滤。-->
            <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">&ndash;&gt;-->
            <!--            <level>error</level>-->
            <!--            <onMatch>ACCEPT</onMatch>-->
            <!--            <onMismatch>DENY</onMismatch>-->
            <!--        </filter>-->
        </appender>
        <root level="info">
            <appender-ref ref="file_console"/>
            <appender-ref ref="file"/>
        </root>
    </springProfile>


</configuration>
